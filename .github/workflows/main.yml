on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: Check R Package

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: '3.6'}
        - { os: macOS-latest, r: '3.6'}
        - { os: macOS-latest, r: 'devel', cran: "https://cloud.r-project.org/"}
        - { os: ubuntu-16.04, r: '3.2', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: '3.3', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: '3.4', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: '3.5', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
        - { os: ubuntu-16.04, r: '3.6', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      # only on macOS devel, using binaries on release
      - name: ccache-mac
        if: runner.os == 'macOS' && matrix.config.os == 'macOS-latest' && matrix.config.r == 'devel'
        run: |
          brew install ccache
          export PATH="/usr/local/opt/ccache/libexec:$PATH"

      - name: Query dependencies
        run: |
          Rscript -e "install.packages('remotes')"
          Rscript -e "saveRDS(remotes::dev_package_deps(dependencies = TRUE), 'depends.Rds', version = 2)"

      - name: Meta non Windows
        if: runner.os != 'Windows'
        run: |
          echo -e 'options(Ncpus = 8, repos = structure(c(CRAN = "https://cloud.r-project.org/")))' > $HOME/.Rprofile

      - name: Install dependencies
        run: |
          Rscript -e "library(remotes)" -e "update(readRDS('depends.Rds'))"
          Rscript -e "if (getRversion() < '3.2' && !requireNamespace('curl')) install.packages('curl')"
          Rscript -e "remotes::install_github('ropensci/tic')" -e "print(tic::dsl_load())" -e "tic::prepare_all_stages()"
          Rscript -e "tic::before_install()"

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Check
        run: Rscript -e 'tic::script()'

      - name: after_success
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == '3.6'
        run: Rscript -e "tic::after_success()"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      # - name: Test coverage
      #   if: matrix.config.os == 'macOS-latest' && matrix.config.r == '3.6'
      #   run: |
      #     Rscript -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
